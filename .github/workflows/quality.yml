name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.25.x

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-quality-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-quality-

    - name: Download dependencies
      run: go mod download

    - name: Run go mod tidy check
      run: |
        go mod tidy
        if [ -n "$(git status --porcelain go.mod go.sum)" ]; then
          echo "go.mod 或 go.sum 文件需要更新"
          git diff go.mod go.sum
          exit 1
        fi

    - name: Run gofmt check
      run: |
        unformatted=$(gofmt -s -l .)
        if [ -n "$unformatted" ]; then
          echo "以下文件需要格式化:"
          echo "$unformatted"
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Run staticcheck
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./...

    - name: Run ineffassign
      run: |
        go install github.com/gordonklaus/ineffassign@latest
        ineffassign ./...

    - name: Run misspell
      run: |
        go install github.com/client9/misspell/cmd/misspell@latest
        misspell -error .

    - name: Check for TODO/FIXME comments
      run: |
        todos=$(grep -r "TODO\|FIXME" --include="*.go" . || true)
        if [ -n "$todos" ]; then
          echo "发现待办事项:"
          echo "$todos"
          echo "请在提交前处理这些待办事项"
        fi

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.25.x

    - name: Run Nancy (dependency vulnerability scanner)
      run: |
        go install github.com/sonatypecommunity/nancy@latest
        go list -json -deps ./... | nancy sleuth

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  commit-lint:
    name: Commit Message Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Validate current commit (last commit)
      run: npx commitlint --from HEAD~1 --to HEAD --verbose

    - name: Validate PR commits
      run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to HEAD --verbose